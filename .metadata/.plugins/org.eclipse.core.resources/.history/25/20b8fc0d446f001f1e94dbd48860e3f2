package chapter13;
/*
	singleton 패턴
	: 소프트웨어 설계 패턴
	>> 클래스의 인스턴스가 하나만 생성되도록 보장
	>> 해당 클래스의 인스턴스에 전역적인 접근을 제공하지만 일관된 상태를 유지
*/
public class Singleton {
	private static Singleton instance;
	
	private Singleton() {}; // 생성자를 private으로 선언 - 외부에서 직접 인스턴스 생성 X
	
	// 전역 접근성을 제공하는 메서드를 제공
	public static Singleton getInstance() {
		if (instance == null) { // 정적 변수에 아무런 값이 없다면 (한번도 인스턴스화 X)
			instance = new Singleton();
		}
		return instance;
	}
}
